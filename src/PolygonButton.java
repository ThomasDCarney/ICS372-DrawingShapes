/**
 * Class: ICS 372 - Object Oriented Design and Implementation <br>
 * Instructor: Habtamu Bogale <br>
 * Description: Group Project #3, A simple drawing program. <br>
 * Due: 12/04/2015 <br><br>
 * 
 * This is a button displayed by the GUI and used to create a Polygon object. This is a JButton
 * and also extends ActionListener as the actionPerformed method is part of the class. There is 
 * also an inside class used to process mouse clicks once the button is pushed in order to flesh 
 * out the item.
 * 
 * @author Jacob Mathias, Ghislain Ndike, Andrea Deerberg, Tom Carney
 * @version 1.0
 * @since 11/23/2015
 */

import java.awt.Cursor;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JButton;
import javax.swing.JPanel;


public class PolygonButton extends JButton implements ActionListener {

    protected JPanel drawingPanel;
    protected View view;
    private MouseHandler mouseHandler;
    
    /**
     * This will create a new button, starting off the process of creating
     * polygon objects.
     * 
     * @param jFrame - The frame where the button is located.
     * 
     * @param jPanel - The panel used as a canvas where mouse clicks occur.
     */
    public PolygonButton(View jFrame, JPanel jPanel) {
        
        super("Polygon");
        addActionListener(this);
        view = jFrame;
        drawingPanel = jPanel;
        
    } // end PolygonButton constructor
    
    
    /**
     * Handles the click to create a new Polygon.
     * 
     * @param - The event generated by pushing the button.
     */
    public void actionPerformed(ActionEvent e) {
        
        drawingPanel.setCursor(new Cursor(Cursor.CROSSHAIR_CURSOR));
        mouseHandler = new MouseHandler();
        drawingPanel.addMouseListener(mouseHandler);
        
        // Following existing code, creating object prior to fleshing it out with vertices. 
        Controller.instance().makePolygon();
        
    } // end actionPerformed
    
    
    /**
     * This handles clicks, gathering vertices to flesh out the Polygon. Clicking within 10 
     * pixels of the initial vertex will close the shape but at least 3 vertices are required.
     */
    private class MouseHandler extends MouseAdapter {
        
        private Point firstPoint;
        private Point newPoint;
        private int pointCount;
        
        public void mouseClicked(MouseEvent event) {
            
            newPoint = event.getPoint();
            
            // three scenario we want to handle, the rest we ignore:
            // 1) The first point, in general it's just accepted accepted.
            // 2) Points 2 and 3, for now just need to be more than 10 pixels from point 1.
            // 3) Points 4+ could either add another segment or close the shape.
            
            if(pointCount == 0) { // scenario 1
                
                firstPoint = newPoint;
                Controller.instance().addPolygonVertex(newPoint);
                pointCount++;
                
            } else if(pointCount < 3 && firstPoint.distance(newPoint) > 10) { // scenario 2
                
                Controller.instance().addPolygonVertex(newPoint);
                pointCount++;
                
            } else if(pointCount >= 3) { // scenario 3
            
                if(firstPoint.distance(newPoint) > 10) { // first part
                    
                    Controller.instance().addPolygonVertex(newPoint);
                    pointCount++;
                    
                } else { // second part, finally done
                    
                    pointCount = 0;
                    drawingPanel.removeMouseListener(this);
                    drawingPanel.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                    
                } // end nested if-else block
            
            } // end outer if-else block
            
        } // end mouseClicked
        
        
    } // end MouseHandler

    
} // end PolygonButton
